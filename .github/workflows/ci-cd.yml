name: Newsalyzer CI/CD Pipeline

on:
  push:
    branches:
      - main
      - '*-implementation'
      - '*-integration'
      - 'fix-*'
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy-docker-image:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      LOG_LEVEL: DEBUG

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
        
      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install requirements
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/newsalyzer:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/newsalyzer:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/newsalyzer:cache,mode=max
      
      - name: Set up Docker compose and create .env
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
          echo "SUPABASE_API_KEY=${{ secrets.SUPABASE_API_KEY }}" >> .env
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
          echo "LOG_LEVEL=DEBUG" >> .env

      - name: Start services
        run: |
          docker-compose up -d
      
      - name: Stop docker services
        run: |
          docker-compose down --volumes --remove-orphans --timeout 30
